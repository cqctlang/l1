listref = lambda(l, i){
	if(i == 0)
		return car(l);
	else
		return listref(cdr(l), i-1);
};

dispatch = lambda a {
	arg = listref(a, 0);

	if(arg == "get"){
		range = listref(a, 1);
		print("get ");
		print(rangebeg(range));
		print(" ");
		print(rangelen(range));
		print("\n");
		return;
	}

	if(arg == "looksym"){
		sym = listref(a, 1);
		print("looksym ");
		print(sym);
		print("\n");
		return;
	}

	if(arg == "put"){
		range = listref(a, 1);
		str = listref(a, 2);
		print("put ");
		print(rangebeg(range));
		print(" ");
		print(rangelen(range));
		print(" ");
		print(str);
		print("\n");
	}

	printf("bad argument to dispatch\n");
};

test1 = lambda() {
	x = `sym;
};

test2 = lambda(){
	v = mkvec(5);
	print(v);
	for(i = 0; i < veclen(v); i++)
		vecset(v, i, i*i);
	print(v);
	for(i = 0; i < veclen(v); i++)
		print(vecref(v, i));
};

//test2();

test3 = lambda(){
	v = vector(10,11,12,13,14);
	print(v);
	for(i = 0; i < veclen(v); i++)
		print(vecref(v, i));
	print(v);
	for(i = 0; i < veclen(v); i++)
		vecset(v, i, i*i);
	print(v);
	for(i = 0; i < veclen(v); i++)
		print(vecref(v, i));
};

//test3();

test4 = lambda(){
	v = vector();
	print(v);
	for(i = 0; i < veclen(v); i++)
		print(vecref(v, i));
	print(v);
	for(i = 0; i < veclen(v); i++)
		vecset(v, i, i*i);
	print(v);
	for(i = 0; i < veclen(v); i++)
		print(vecref(v, i));
};

//test4();

test5 = lambda(){
	v = vector();
	print(v);
	vecset(v, 10, 11);
};

//test5();

mknames = lambda(names, tid, tag, sym){
	print("mknames!");
};

test6 = lambda(){
	ns = @names 1 {
		int x;
	};
};

test6();
