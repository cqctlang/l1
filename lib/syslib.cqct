/* native syscall replacements for system functions in l1 */
@include <sys.cqct>

/* we don't yet have a way to make the Cinquecento str that mapfile returns from Cinquecento */
_mapfile = @lambda(filename) {
  @local fd,st,p;

  fd=sys_open(filename,unix`O_RDONLY);
  if(0 > fd) {
    error("cannot open %s",filename);
  }

  st = (struct unix`stat *)malloc(sizeof(struct unix`stat));
  if(!st) {
    error("couldn't allocate stat buf");
  }

  // no sys_fstat yet
  //if(0 > fstat(fd,st)) {
  //  close(fd);
  //  error("couldn't stat %s",filename);
  //} 

  p = sys_mmap(0, st.st_size, unix`PROT_READ|unix`PROT_WRITE,
                              unix`MAP_NORESERVE|unix`MAP_PRIVATE, fd, 0); 

  close(fd);
  if(p == -1)
    error("could not map %s",filename);

};

@global iohash;

iohash=[:];

open = @lambda(filename, mode) {
  @local flags,fd,newmode,nfd;

  if(!isstring(filename)) 	error("open: filename is not a string");
  if(!isstring(mode)) 		error("open: mode is not a string");
  if(1 > strlen(mode)) 		error("open: mode cannot be empty");

  if(    ( strstr(mode,"r") && strstr(mode,"w") )
      || ( strstr(mode,"r") && strstr(mode,"a") )
      || ( strstr(mode,"w") && strstr(mode,"a") ) )
    error("open: modes \"a\", \"w\", and \"r\" are exclusive");

  flags = 0;

  switch(mode[0]) {
  case 'r':
    if(strstr(mode,"+"))
      flags = unix`O_RDWR;
    else
      flags = unix`O_RDONLY;
    break;
  case 'w':
    if(strstr(mode,"+"))
      flags = unix`O_RDWR	| unix`O_CREAT	| unix`O_TRUNC;
    else
      flags = unix`O_WRONLY 	| unix`O_CREAT 	| unix`O_TRUNC;
    break;
  case 'a':
    if(strstr(mode,"+"))
      flags = unix`O_RDWR 	| unix`O_CREAT 	| unix`O_APPEND;
    else
      flags = unix`O_WRONLY 	| unix`O_CREAT 	| unix`O_APPEND;
    break;
  default:
    error("open: invalid mode: %a",mode);
  }
  
  fd=sys_open(filename,flags,0777);
  if(0 > fd) {
    return nil;
  } 

  newmode="";
  if( (flags & unix`O_WRONLY) || 
      (flags & unix`O_RDWR) || 
      (flags & unix`O_APPEND) )
    newmode+="w";
  if( (flags & unix`O_RDONLY) ||
      (flags & unix`O_RDWR) )
    newmode+="r";

  nfd=fdopen(fd,newmode);

  if(isnil(nfd)) {
    return nil;
  } else {
    @local k;

    k=weakcons(nfd,nil); 
    iohash[k]=fd;

    finalize(nfd,@lambda(args ...) {
      tabdelete(iohash,k);
      sys_close(fd);
    });
    
    return nfd;
  }

};

close = @lambda(fd) {
  @local sfd;
  sfd=iohash[cons(fd,nil)];
  if(sfd) {
    sys_close(sfd); 
  } else {
    error("close: closing a cinquecento fd with no unix fd");
  }
};

unlink = sys_unlink;
