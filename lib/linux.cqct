@include <elf.cqct>
@include <dwarf.cqct>
@include <pras.cqct>

@define mklinuxdom(ns, as)
{
	@local xtrap, dispatch;

	@define xtrap(this, addr, fn)
	{
		@local x;
		if(isdom(this))
			x = mkdom(this.ns, as);
		else
			x = as;
		x.xtrap(addr, @lambda(id, addr) { fn(this); return 0; });
	}

	@define dispatch(this, id, arg ...)
	{
		@local x;
		if(isdom(this))
			x = mkdom(this.ns, as);
		else
			x = as;
		return callmethod(x, id, arg);
	}

	xas = mkas([ "xtrap" : xtrap, "dispatch" : dispatch ]);
	return mkdom(ns, xas);
}

@define launch(arg ...)
{
	@local as, ns;
	as = apply(launchlocalproc, arg);
	as.launch(0, arg);
	ns = init_debug_domain(arg[0]);
	return mklinuxdom(ns, as);
}

@define launchwithnames(names, arg ...)
{
	@local xas, as, xtrap, xsnap, dispatch;
	as = apply(launchlocalproc, arg);
	as.launch(0, arg);
	ns = eval(sprintfa("@names clp64le { @include \"%s\" };", names));
	return mklinuxdom(ns, as);
}
