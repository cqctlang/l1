#!/usr/bin/env l1
!#

@include <sctl.cqct>
@include <dump.cqct>

@global nsamesclt_defined;
if(nsamesclt_defined == nil){
@local snamesaddr;

@global setsnamesaddr, resetsnamesclt, snamesns;

snamesaddr = "localhost:30000";

@define setsnamesaddr(addr)
{
	snamesaddr = addr;
}


fd = tcpopen("localhost:30000");
version(fd);
ping(fd, 100);
ping(fd, 200);
ping(fd, 200000);
nsid = names(fd, "emacs.names");
printf("nsid %u\n", nsid);

ns = mksctlns(fd, nsid);
if(1){
t = looktype(ns, @typename(struct Lisp_Vector));
printtype(t);
ts = ns.enumtype();
foreach(@lambda(tn, td) { printtype(td); }, ts);
ss = ns.enumsym();
foreach(@lambda(id, sym) { printf("%t\n", sym); }, ss);
}

sym = looksym(ns, 'safe_eval_handler);
printf("orig: %x %t\n", symoff(sym), sym);
sym1 = ns.lookaddr(symoff(sym));
printf("sym1: %x %t\n", symoff(sym1), sym1);
sym2 = ns.lookaddr(symoff(sym)+0x10);
printf("sym2: %x %t\n", symoff(sym2), sym2);
