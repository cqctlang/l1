@global dwaddr2src,
	dwsrc2addr
	;

{

@record srcloc {
	file,
	line,
	col,
};

@defloc decodesrc(q)
{
	@local file, line, col;
	[file, q] = decodes(q);
	q = (int32*)q;
	line = *q++;
	col = *q++;
	return [srcloc(file, line, col), q];
}

@define dwaddr2src(addr, nsmap)
{
	@local ns, src;
	ns = nsmap.byaddr(addr);
	if(ns == nil)
		error("no name space for pc %p", addr);
	src = ns.looksrc(addr);
	if(src != nil)
		[src, _] = decodesrc(src);
	return src;
}

@define dwsrc2addr(spec, ns)
{
	@local ss, file, line, pc;

	ss = split(spec, ":");
	if(length(ss) != 2)
		error("invalid source line specification: %a", spec);
	file = ss[0];
	line = strton(ss[1]);
	pc = ns.lookline(file, line);
	return pc;
}

}
