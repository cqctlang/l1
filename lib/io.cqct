@global
	fdopen,
	mapfile,      
	open,
	popen
;	

{
@local ions;

ions = @names c32le {
	enum Fflag {
		/* FFlag in syscqct.h */
		Fread = 4,
		Fwrite = 8,
	};
};

@defloc mode2flags(mode)
{
	@local flags;
	flags = 0;
	if(strstr(mode, "r") != nil)
		flags |= ions`Fread;
	if(strstr(mode, "w") != nil)
		flags |= ions`Fwrite;
	return flags;
}

@defloc mksysfdfinal(arg ...)
{
	@local rv;
	rv = apply(mksysfd, arg);
	finalize(rv, close);
	return rv;
}

@define open(file, mode)
{
	@local fd;
	fd = _open(file, mode);
	if(fd == nil)
		return nil;
	return mksysfdfinal(fd, mode2flags(mode), file);
}

@define fdopen(fd, mode)
{
	mksysfdfinal(fd, mode2flags(mode), sprintfa("fd%d", fd));
}

@define popen(arg ...)
{
	@local fds;
	fds = apply(_popen, arg);
	return map(@lambda(fd){
			/* FIXME: don't be overly permissive */
			mksysfdfinal(fd, ions`Fread|ions`Fwrite);
		}, fds);
}

@define mapfile(arg ...)
{
	@local addr, len, rv;
	[addr, len] = apply(_mapfile, arg);
	rv = mkstrm(addr, len);
	finalize(rv, @lambda(x){ _munmap(addr, len); });
	return rv;
}

}
