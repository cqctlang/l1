define listref(l, i){
	if(i == 0)
		return car(l);
	else
		return listref(cdr(l), i-1);
}

define mkzas(len){
	@local dispatch, str;
	str = string(len);
	define dispatch args {
		@local arg, range, s, new, beg, end;
		arg = listref(args, 0);

		if(arg == "get"){
			range = listref(args, 1);
			beg = rangebeg(range);
			end = beg+rangelen(range);
			printf("get %x %x\n", beg, end);
			return substr(str, beg, end);
		}

		if(arg == "put"){
			range = listref(args, 1);
			beg = rangebeg(range);
			end = beg+rangelen(range);
			new = listref(args, 2);
			strput(str, beg, new);
			printf("put %x %x\n", beg, end);
			return;
		}

		printf("bad argument to dispatch!\n");
	}
	return mkas(dispatch);
}

define main(){
	@local dom, ns, as;

	as = mkzas(1024);
	ns = @names c32le {
		@0x0	int x;
		@0x4	int y;
	};
	dom = mkdom(ns, as);
	printf("&dom`x -> %t %x\n", &dom`x, &dom`x);
	printf("&dom`y -> %t %x\n", &dom`y, &dom`y);
}

main();
