define mkzas(len){
	@local dispatch, str;
	str = mkstr(len);
	define dispatch args {
		@local arg, range, s, new, beg, end;
		arg = listref(args, 0);

		if(arg == "get"){
			range = listref(args, 1);
			beg = rangebeg(range);
			end = beg+rangelen(range);
			printf("get %x %x\n", beg, end);
			return substr(str, beg, end);
		}

		if(arg == "put"){
			range = listref(args, 1);
			beg = rangebeg(range);
			end = beg+rangelen(range);
			new = listref(args, 2);
			strput(str, beg, new);
			printf("put %x %x\n", beg, end);
			return;
		}

		printf("bad argument to dispatch!\n");
	}
	return mkas(dispatch);
}

ns = @names c32le {
	enum e {
		x,
		y,
	};
	typedef int int_t;
	@0x0 int_t i;
};

dom = mkdom(ns, mkzas(1024));
printf("%d\n", dom`i);
x = dom`x;
x = typeof(x);
printf("typeof(x) = %t\n", x);
printf("x is %t %d\n", typeof(dom`x), dom`x);
printf("y is %t %d\n", typeof(dom`y), dom`y);
