// simple cases

// degenerate cases
@profile("haslabel") {}
@profile() {} // should have file:lineno label

// return inside profile body
@lambda() {
	@profile("return") {
		return;
		printf("Shouldn't be here");
	}
}();
@lambda() {
	@profile("return_inside_block") {
		{
			return;
		}
		printf("Shouldn't be here");
	}
}();
@lambda() {
	@profile("return_inside_if") {
		if(1) return;	
		printf("Shouldn't be here");
	}
}();
@lambda() {
	@profile("return_inside_if_block") {
		if(1) { return;	}
		printf("Shouldn't be here");
	}
}();

printf("each should have one call\n");

@define dumpprof() {
	printf("profiles:\n");
	printf("label: calls location expansions\n");
	foreach(@lambda(k) {
		printf("%a: %a %a\n",k,profiles[k][0],
					profiles[k][3],
					profiles[k][2]);	
	},tabkeys(profiles));
}

dumpprof();
