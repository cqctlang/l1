
@add_loadpath(loadpath()[0] + "/../test/libs");

printf("started\n");


@library(test) {
    @local runs;
    @global loads;
    if (loads == nil) loads = 0;
    runs = 0;
    @import( lib3 );
    @export( func );
    @define func() {
        printf("running test.func %d\n",runs);
        ++runs;
        f2();
    }
    printf("test load #%d\n\n",loads);
    ++loads;
};

@with_imports( test ) {
    printf("import 1\n");
    func();
}

printf("done\n\n");

@with_imports( test ) {
    printf("import 2\n");
    func();
}

printf("done\n\n");

printf("reload: %d\n", __library_exports[0].get_reload());

@reload_imports(1);

printf("reload: %d\n", __library_exports[0].get_reload());

@with_imports( test ) {
    printf("import 3\n");
    func();
}

printf("done\n\n");

@with_imports( test ) {
    printf("import 4\n");
    func();
}

printf("done\n\n");

@reload_imports(0);

printf("reload: %d\n", __library_exports[0].get_reload());

@with_imports( test ) {
    printf("import 5\n");
    func();
}

@with_imports( test ) {
    printf("import 5\n");
    func();
}
