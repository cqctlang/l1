@include <ctls.cqct>

@define ctx2pc(ctl, ctx)
{
	@local pc, dom;
	pc = ctx->rip;
	dom = ctldombyaddr(ctx, pc);
	return {dom}pc;
}

@define test1(cmd)
{
	@local ctl, mux, exe;

	mux = mkctlmux();
	ctl = ctllaunch(mux, [cmd]);

	exe = ctlexe(ctl);
	ctl.trap('brk, &exe`f,
		 @lambda(ctl){
			 @local xs, pcs;

			 xs = ctlunwindctxs(ctl);
			 if(xs == nil){
				 printf("cannot unwind\n");
				 return;
			 }
			 pcs = map(@lambda(ctx) { ctx2pc(ctl, ctx); }, xs);
			 foreach(@lambda(pc){
					 printf("\t%p\t%20y\n", pc, pc);
				 }, pcs);
			 printf("\n");
		 });
	mux.run();
}

foreach(test1, [
		"./wind1",
//		"./wind1.32",
//		"./wind2",
//		"./wind2.32"
		]);
